version: "3.7"
services:
  php-fpm-7:
    build:
      context: ./php-fpm-7
      args:
        - PHP7_INSTALL_XDEBUG=${PHP7_INSTALL_XDEBUG}
        - PHP7_INSTALL_MONGO=${PHP7_INSTALL_MONGO}
        - PHP7_INSTALL_SOAP=${PHP7_INSTALL_SOAP}
    container_name: setupdocker-php-fpm-7
    working_dir: /var/www/
    volumes:
      - ../:/var/www
    networks:
      - setupdocker
    
  php-fpm-8:
    build:
      context: ./php-fpm-8
      args:
        - PHP8_INSTALL_XDEBUG=${PHP8_INSTALL_XDEBUG}
        - PHP8_INSTALL_MONGO=${PHP8_INSTALL_MONGO}
        - PHP8_INSTALL_SOAP=${PHP8_INSTALL_SOAP}
    container_name: setupdocker-php-fpm-8
    working_dir: /var/www/
    volumes:
      - ../:/var/www
    networks:
      - setupdocker

  nginx7:
    build:
      context: ./nginx
      dockerfile: Dockerfile7
    container_name: setupdocker-nginx7
    depends_on:
      - php-fpm-7
    ports:
      - "${NGINX7_HOST_HTTP_PORT}:80"
      - "${NGINX7_HOST_HTTPS_PORT}:443"
      - "${VARNISH7_BACKEND_PORT}:81"
    volumes:
      - ../:/var/www
      - ./logs/nginx/:/var/log/nginx
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/ssl/:/etc/nginx/ssl
    networks:
      - setupdocker
  
  nginx8:
    build:
      context: ./nginx
      dockerfile: Dockerfile8
    container_name: setupdocker-nginx8
    depends_on:
      - php-fpm-8
    ports:
      - "${NGINX8_HOST_HTTP_PORT}:80"
      - "${NGINX8_HOST_HTTPS_PORT}:443"
      - "${VARNISH8_BACKEND_PORT}:81"
    volumes:
      - ../:/var/www
      - ./logs/nginx/:/var/log/nginx
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/ssl/:/etc/nginx/ssl
    networks:
      - setupdocker

  cakephp:
    build:
      context: ./cakephp
      args:
        - INSTALL_XDEBUG_CAKE=${INSTALL_XDEBUG_CAKE}
    container_name: setupdocker-cakephp
    tty: true
    volumes:
      - ../:/var/www/html
      - ./cakephp/apache/000-default.conf /etc/apache2/sites-available/
    ports:
      - 80:80
    working_dir: /var/www/html
    networks:
      - setupdocker

  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ~/.setupdocker/data/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - setupdocker

networks:
  setupdocker:
    driver: bridge
